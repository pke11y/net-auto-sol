---
- hosts: pe2.pk.lab
  connection: network_cli
  gather_facts: no
  roles:
    - ansible-pyats
  tasks:
    - name: Set local variables
      set_fact:
        vrf_name: "{{hostvars[inventory_hostname]['vrfs'][0]['name']}}"
        vrf_type: "{{hostvars[inventory_hostname]['vrfs'][0]['type']}}"
        router_id: "{{hostvars[inventory_hostname]['nodes']['pe'][inventory_hostname]['routerid']}}"
        rd: "{{hostvars[inventory_hostname]['vrfs'][0]['rd']}}"
    - name: Run command to get VPNV4 data
      cli_command:
        command: sh ip bgp vpnv4 vrf {{vrf_name}}
      register: cli_output
    - name: Parsing output
      set_fact:
        rd_cli: "{{(vrf_type + ' RD ' + router_id + ':' + rd)}}"
        parsed_output: "{{ cli_output.stdout | pyats_parser('show ip bgp vpnv4 vrf {{vrf_name}}', 'iosxe') }}"
    - name: Set VPNV4 routes variable
      set_fact:
        routes: "{{parsed_output['vrf'][vrf_name]['address_family'][rd_cli]['routes']}}"

- hosts: ios_pe
  connection: network_cli
  gather_facts: no
  roles:
    - ansible-pyats
  tasks:
    - name: Run command to get VRF BGP neighbor data
      cli_command:
        command: sh ip bgp vpnv4 vrf VRF_ACME neighbors
      register: cmd_output
    - name: Parsing BGP Neighbor output
      set_fact:
        bgp_neigh_output: "{{ cmd_output.stdout | pyats_parser('show ip bgp vpnv4 vrf VRF_ACME neighbors', 'iosxe') }}"